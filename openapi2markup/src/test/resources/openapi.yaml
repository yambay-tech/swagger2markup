openapi: "3.0.1"
info:
  title: Mobile Enterprise S3 Adapter Inbound REST API
  description: |
    The Mobile Enterprise S3 Adapter Inbound REST API receives updates for Orders and Order Assignments from the S3 ADMS Mobility Gateway.

    It persists and queues messages for all API calls to a Kafka topic ready to be consumed by the MWFM system. Once the message has been successfully persisted in Kafka, a resoonse is returned to the S3 ADMS Mobility Gateway.

    A response of HTTP 200 will indicate that the message has been processed successfully.  If the S3 Adapter is unable to process the message it will return an HTTP error response.

  version: 1.0.2
tags:
  - name: orders
paths:
  /orders/:
    post:
      tags:
        - orders
      summary: Create a new order in the MWFM system.
      description: |

        === Testing
        == Hello

        **Interface Name:** Create Order. +
        **Trigger:** A new Switching Order is approved in the ADMS. +
        **Outcome:** An Order is created in the MWFM system.

      operationId: createOrder

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            examples:
              Order1:
                value:
                  id: 10

      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'

  /orders/{id}/names/:
    put:
      tags:
        - "order names"
      summary: "Update order names"
      operationId: updateOrderNames
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                names:
                  $ref: "#/components/schemas/Names"
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'

  /orders/{id}/assignments/:
    post:
      tags:
        - "order assignments"
      summary: "Create an assignment"
      operationId: createOrderAssignment
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAssignment'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'

    put:
      tags:
        - "order assignments"
      summary: "Update assignments"
      operationId: updateOrderAssignments
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAssignment'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
  /orders/{id}/assignments/{crew-id}:
    delete:
      tags:
        - "order assignments"
      summary: "Delete an assignment"
      operationId: deleteOrderAssignment
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
        - name: crew-id
          in: path
          description: The crew assigned to the switching order
          required: true
          schema:
            type: string
      responses:
        500:
          description: Internal server error
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: Service unavailable
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        504:
          description: Gateway timeout
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{id}/switching-order/header/:
    patch:
      tags:
        - "switching order header"
      summary: "Update switching order header"
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchingOrderHeader'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
  /orders/{id}/switching-order/steps/:
    post:
      tags:
        - "switching order steps"
      summary: "Insert switching order steps"
      operationId: insertSwitchingOrderSteps
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SwitchingOrderStep'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
    put:
      tags:
        - "switching order steps"
      summary: "Update switching order steps"
      operationId: updateSwitchingOrderSteps
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SwitchingOrderStep'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
    patch:
      tags:
        - "switching order steps"
      summary: "Renumber switching order steps"
      operationId: RenumberSwitchingOrderSteps
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenumberSteps'
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
  /orders/{id}/switching-order/steps/{step-id}/:
    delete:
      tags:
        - "switching order steps"
      summary: "Delete a switching order step"
      operationId: deleteSwitchingOrderStep
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
        - name: step-id
          in: path
          description: Switching order step id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'

  /orders/{id}/switching-order/employees/:
    put:
      tags:
        - "switching order employees"
      summary: "Update switching order employees"
      operationId: updateSwitchingOrderEmployees
      parameters:
        - name: id
          in: path
          description: The id of the Order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EmployeeInfo"
      responses:
        200:
          description: Ok
        500:
          $ref: '#/components/responses/500'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'

components:
  responses:
    500:
      description: Internal server error
      content:
        applicaton/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    503:
      description: Service unavailable
      content:
        applicaton/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    504:
      description: Gateway timeout
      content:
        applicaton/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    Order:
      type: "object"
      properties:
        id:
          type: "string"
          description: Unique identifier for the Order.
          x-mapping: GUID, SwitchingOrderNumber or similar.

        orderType:
          $ref: "#/components/schemas/OrderType"
        names:
          $ref: "#/components/schemas/Names"
        switchingOrder:
          $ref: "#/components/schemas/SwitchingOrder"
    SwitchingOrder:
      type: "object"
      properties:
        switchingOrderHeader:
          $ref: "#/components/schemas/SwitchingOrderHeader"
        steps:
          type: array
          items:
            $ref: "#/components/schemas/SwitchingOrderStep"
        employees:
          type: array
          items:
            $ref: "#/components/schemas/EmployeeInfo"
    SwitchingOrderHeader:
      type: "object"
      properties:
        switchOrderNumber:
          type: "string"
          description: dd
          x-mapping: eee
        name:
          type: "string"
        workRequestId:
          type: "string"
        referenceNumber:
          type: "string"
        stationName:
          type: "string"
        deviceName:
          type: "string"
        feederName:
          type: "string"
        divisionId:
          type: "string"
        operatingCentreId:
          type: "string"
        version:
          type: "integer"
          format: "int32"
          minimum: 0
        isPlanned:
          type: "boolean"
        status:
          type: "string"
        scheduledStartTime:
          type: "string"
          format: "dateTime"
        scheduledEndTime:
          type: "string"
          format: "dateTime"
        actualStartTime:
          type: "string"
          format: "dateTime"
        actualEndTime:
          type: "string"
          format: "dateTime"
        createdTime:
          type: "string"
          format: "dateTime"
        lastModifiedTime:
          type: "string"
          format: "dateTime"
        preparedBy:
          type: "string"
        validatedBy:
          type: "string"
        validatedTime:
          type: "string"
          format: "dateTime"
        approvedBy1:
          type: "string"
        approvedBy2:
          type: "string"
        approvedBy3:
          type: "string"
        approvedTime1:
          type: "string"
          format: "dateTime"
        approvedTime2:
          type: "string"
          format: "dateTime"
        approvedTime3:
          type: "string"
          format: "dateTime"
        approvedTo:
          type: "string"
        executedBy:
          type: "string"
        completedBy:
          type: "string"
        executedTime:
          type: "string"
          format: "dateTime"
        description:
          type: "string"
        searchKeyWord:
          type: "string"
        lastModifiedByUser:
          type: "string"
        customFields:
          type: array
          items:
            $ref: "#/components/schemas/CustomField"
        isolatingDevices:
          type: array
          items:
            $ref: "#/components/schemas/IsolatingDevice"
        isolatingDevicesDetails:
          type: string
        temporaryGrounds:
          type: array
          items:
            $ref: "#/components/schemas/TemporaryGround"
        temporaryGroundsDetails:
          type: string
        safetyDocuments:
          type: array
          items:
            $ref: "#/components/schemas/SafetyDocument"
    SwitchingOrderStep:
      type: object
      properties:
        id:
          type: "string"
        stepNumber:
          type: "integer"
          format: "int32"
        deviceId:
          type: "string"
        deviceName:
          type: "string"
        deviceTypeName:
          type: "string"
        deviceStationName:
          type: "string"
        deviceState:
          type: "string"
        tagType:
          type: "string"
        stepInstruction:
          type: "string"
        comment:
          type: "string"
        issuedBy:
          type: "string"
        issuedTo:
          type: "string"
        issuedTime:
          type: "string"
          format: "dateTime"
        completedTime:
          type: "string"
          format: "dateTime"
        actualTime:
          type: "string"
          format: "dateTime"
        customFields:
          type: array
          items:
            $ref: "#/components/schemas/CustomField"
        mode:
          type: "string"
        issuedToId:
          type: "string"
        deviceX:
          type: "string"
        deviceY:
          type: "string"
        site:
          type: "string"
        safetyInstruction:
          type: "string"
        cancelledTime:
          type: "string"
          format: "dateTime"
    CustomField:
      type: object
      properties:
        name:
          type: "string"
        value:
          type: "string"
    EmployeeInfo:
      type: object
      properties:
        id:
          type: "string"
        name:
          type: "string"
    OrderAssignment:
      type: object
      properties:
        crew-id:
          type: "string"
        status:
          type: string
          enum: [assigned, dispatching, takingback]
    RenumberSteps:
      type: array
      items:
        properties:
          stepId:
            type: "string"
          oldPosition:
            type: "integer"
            format: "int32"
          newPosition:
            type: "integer"
            format: "int32"
    Names:
      type: array
      title: Unique names
      description: List of unique names for the Order that will be provided in all messages related to this Order (both inbound and outbound).
      x-mapping: These can be from OMS, DMS or other systems for Documents that has a 1-1 releationship with the Order.

      items:
        properties:
          name:
            type: "string"
          nameType:
            type: "string"
          nameTypeAuthority:
            type: "string"
    IsolatingDevice:
      type: object
      properties:
        device:
          type: "string"
        station:
          type: "string"
        structure:
          type: "string"
    TemporaryGround:
      type: object
      properties:
        line:
          type: "string"
        station:
          type: "string"
    SafetyDocument:
      type: object
      properties:
        safetyDocNumber:
          type: "string"
        safetyDocType:
          type: "string"
        safetyDocHolder:
          type: "string"
        safetyDocSecondHolder:
          type: "string"
    OrderType:
      title: The type of Order.
      description: |
        PO = Planned Order \
        TO = Trouble Order \
        The current scope of this specification is for Planned Orders.
      type: string
      enum: [PO,TO]
